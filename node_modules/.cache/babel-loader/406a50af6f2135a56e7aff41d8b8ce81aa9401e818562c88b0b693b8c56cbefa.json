{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saura\\\\Desktop\\\\Sen-React-main (1)\\\\Sen-React-main\\\\src\\\\Songs.js\";\nimport React from 'react';\nimport SongList from './SongList';\nimport songData from \"./songData.json\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Songs(props) {\n  const {\n    emotionLabel\n  } = props;\n  // Filter songs based on the emotionLabel\n  const filteredSongs = songData.filter(song => song.emotion === emotionLabel);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Feeling \", emotionLabel, \" - Here are some songs\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), filteredSongs.map(song => /*#__PURE__*/_jsxDEV(SongList, {\n      title: song.title,\n      singer: song.singer,\n      genre: song.genre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n}\n_c = Songs;\nvar _c;\n$RefreshReg$(_c, \"Songs\");","map":{"version":3,"names":["React","SongList","songData","jsxDEV","_jsxDEV","Fragment","_Fragment","Songs","props","emotionLabel","filteredSongs","filter","song","emotion","children","fileName","_jsxFileName","lineNumber","columnNumber","map","title","singer","genre","_c","$RefreshReg$"],"sources":["C:/Users/saura/Desktop/Sen-React-main (1)/Sen-React-main/src/Songs.js"],"sourcesContent":["import React from 'react'\r\nimport SongList from './SongList'\r\nimport songData from \"./songData.json\"\r\n\r\nexport default function Songs(props) {\r\n    const { emotionLabel } = props;\r\n    // Filter songs based on the emotionLabel\r\n    const filteredSongs = songData.filter(song => song.emotion === emotionLabel);\r\n    return (\r\n        <>\r\n            <h2>Feeling {emotionLabel} - Here are some songs</h2>\r\n            {filteredSongs.map(song => (\r\n                <SongList title={song.title} singer={song.singer} genre={song.genre} />\r\n            ))}\r\n\r\n        </>\r\n    )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,eAAe,SAASC,KAAKA,CAACC,KAAK,EAAE;EACjC,MAAM;IAAEC;EAAa,CAAC,GAAGD,KAAK;EAC9B;EACA,MAAME,aAAa,GAAGR,QAAQ,CAACS,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,OAAO,KAAKJ,YAAY,CAAC;EAC5E,oBACIL,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACIV,OAAA;MAAAU,QAAA,GAAI,UAAQ,EAACL,YAAY,EAAC,wBAAsB;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpDR,aAAa,CAACS,GAAG,CAACP,IAAI,iBACnBR,OAAA,CAACH,QAAQ;MAACmB,KAAK,EAAER,IAAI,CAACQ,KAAM;MAACC,MAAM,EAAET,IAAI,CAACS,MAAO;MAACC,KAAK,EAAEV,IAAI,CAACU;IAAM;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACzE,CAAC;EAAA,eAEJ,CAAC;AAEX;AAACK,EAAA,GAbuBhB,KAAK;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}