{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saura\\\\Desktop\\\\Sen-React-main (1)\\\\Sen-React-main\\\\src\\\\Startt.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport Songs from './Songs';\nimport Books from './Books';\nimport Podcast from './Podcast';\nimport Movie from './Movie';\nimport Yoga from './Yoga';\nimport './Startt.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Startt = () => {\n  _s();\n  const [chartInstance, setChartInstance] = useState(null);\n  const [suggestionsVisible, setSuggestionsVisible] = useState(false);\n  const [emotionLabel, setEmotionLabel] = useState(null);\n  const [selectedComponent, setSelectedComponent] = useState(null);\n  const [loading, setLoading] = useState(false); // State to manage loading state\n\n  const performQuery = async () => {\n    const queryInput = document.getElementById('queryInput').value.trim();\n    if (queryInput !== '') {\n      try {\n        setLoading(true); // Show loading state\n\n        // Your query API logic here...\n      } catch (error) {\n        console.error('Error performing query:', error);\n      } finally {\n        setLoading(false); // Hide loading state regardless of success or error\n      }\n    } else {\n      console.warn('Query input is empty');\n    }\n  };\n  const handleButtonClick = label => {\n    setEmotionLabel(label); // Set emotion label based on button clicked\n    setSelectedComponent(label.toLowerCase()); // Set selected component based on button clicked\n\n    // Scroll to the recommendations section\n    document.getElementById('recommend').scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const startSpeechRecognition = () => {\n    if ('webkitSpeechRecognition' in window) {\n      const recognition = new webkitSpeechRecognition();\n      recognition.lang = 'en-US';\n      recognition.start();\n      recognition.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        document.getElementById('queryInput').value = transcript;\n        performQuery();\n      };\n      recognition.onerror = event => {\n        console.error('Speech recognition error:', event.error);\n        // Handle error, e.g., show error message to user\n      };\n    } else {\n      console.error('Speech recognition not supported');\n      // Handle case where speech recognition is not supported\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SentimentZen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Take a moment to immerse yourself in the beauty of life's simple joys. Let the gentle whispers of nature soothe your soul, as you embrace the warmth of a sun-kissed breeze.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Feel the rhythm of your heartbeat synchronize with the melody of the universe, reminding you of the infinite possibilities that lie ahead. Allow gratitude to fill your heart and gratitude to guide your path.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"myChart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        id: \"textInputLabel\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"queryInput\",\n          placeholder: \"How are you feeling?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"submitBtn\",\n          onClick: performQuery,\n          className: loading ? 'loading' : '',\n          children: \"Analyze\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"or-divider\",\n        id: \"orDivider\",\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"speechRecognitionBtn\",\n          onClick: startSpeechRecognition,\n          children: \"Start Speech Recognition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"firstemotionText\",\n        children: emotionLabel && `Based on the analysis you seem to be feeling: ${emotionLabel}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), suggestionsVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"suggestionsSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"emotionText\",\n          children: \"Here are some suggestions based on your mood:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestions-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => handleButtonClick('Songs'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"imgs/song.png\",\n              alt: \"Songs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"textt\",\n              children: \"Songs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => handleButtonClick('Books'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"imgs/book.png\",\n              alt: \"Books\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"textt\",\n              children: \"Books\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => handleButtonClick('Podcast'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"imgs/podcast.png\",\n              alt: \"Podcast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"textt\",\n              children: \"Meditation and Yoga\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => handleButtonClick('Movies'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"imgs/movie.png\",\n              alt: \"Movies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"textt\",\n              children: \"Movies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"recommend\",\n      children: selectedComponent && renderSelectedComponent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(Startt, \"xj0+b3vqnNMjLSqiQjLiOx/lagE=\");\n_c = Startt;\nexport default Startt;\nvar _c;\n$RefreshReg$(_c, \"Startt\");","map":{"version":3,"names":["React","useState","Chart","Songs","Books","Podcast","Movie","Yoga","jsxDEV","_jsxDEV","Startt","_s","chartInstance","setChartInstance","suggestionsVisible","setSuggestionsVisible","emotionLabel","setEmotionLabel","selectedComponent","setSelectedComponent","loading","setLoading","performQuery","queryInput","document","getElementById","value","trim","error","console","warn","handleButtonClick","label","toLowerCase","scrollIntoView","behavior","startSpeechRecognition","window","recognition","webkitSpeechRecognition","lang","start","onresult","event","transcript","results","onerror","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","placeholder","onClick","src","alt","renderSelectedComponent","_c","$RefreshReg$"],"sources":["C:/Users/saura/Desktop/Sen-React-main (1)/Sen-React-main/src/Startt.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Chart from 'chart.js/auto';\r\nimport Songs from './Songs';\r\nimport Books from './Books';\r\nimport Podcast from './Podcast';\r\nimport Movie from './Movie';\r\nimport Yoga from './Yoga';\r\nimport './Startt.css';\r\n\r\nconst Startt = () => {\r\n    const [chartInstance, setChartInstance] = useState(null);\r\n    const [suggestionsVisible, setSuggestionsVisible] = useState(false);\r\n    const [emotionLabel, setEmotionLabel] = useState(null);\r\n    const [selectedComponent, setSelectedComponent] = useState(null);\r\n    const [loading, setLoading] = useState(false); // State to manage loading state\r\n\r\n    const performQuery = async () => {\r\n        const queryInput = document.getElementById('queryInput').value.trim();\r\n\r\n        if (queryInput !== '') {\r\n            try {\r\n                setLoading(true); // Show loading state\r\n\r\n                // Your query API logic here...\r\n\r\n            } catch (error) {\r\n                console.error('Error performing query:', error);\r\n            } finally {\r\n                setLoading(false); // Hide loading state regardless of success or error\r\n            }\r\n        } else {\r\n            console.warn('Query input is empty');\r\n        }\r\n    };\r\n\r\n    const handleButtonClick = (label) => {\r\n        setEmotionLabel(label); // Set emotion label based on button clicked\r\n        setSelectedComponent(label.toLowerCase()); // Set selected component based on button clicked\r\n\r\n        // Scroll to the recommendations section\r\n        document.getElementById('recommend').scrollIntoView({ behavior: 'smooth' });\r\n    };\r\n\r\n    const startSpeechRecognition = () => {\r\n        if ('webkitSpeechRecognition' in window) {\r\n            const recognition = new webkitSpeechRecognition();\r\n            recognition.lang = 'en-US';\r\n    \r\n            recognition.start();\r\n    \r\n            recognition.onresult = (event) => {\r\n                const transcript = event.results[0][0].transcript;\r\n                document.getElementById('queryInput').value = transcript;\r\n                performQuery();\r\n            };\r\n    \r\n            recognition.onerror = (event) => {\r\n                console.error('Speech recognition error:', event.error);\r\n                // Handle error, e.g., show error message to user\r\n            };\r\n        } else {\r\n            console.error('Speech recognition not supported');\r\n            // Handle case where speech recognition is not supported\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <h1>SentimentZen</h1>\r\n            <p>Take a moment to immerse yourself in the beauty of life's simple joys. Let the gentle whispers of nature soothe your soul, as you embrace the warmth of a sun-kissed breeze.</p>\r\n            <p> Feel the rhythm of your heartbeat synchronize with the melody of the universe, reminding you of the infinite possibilities that lie ahead. Allow gratitude to fill your heart and gratitude to guide your path.</p>\r\n            <div className=\"container\">\r\n                <canvas id=\"myChart\"></canvas>\r\n                <div className=\"input-container\" id=\"textInputLabel\">\r\n                    <input type=\"text\" id=\"queryInput\" placeholder=\"How are you feeling?\" />\r\n                    <button id=\"submitBtn\" onClick={performQuery} className={loading ? 'loading' : ''}>Analyze</button>\r\n                    \r\n                </div>\r\n\r\n                <div className=\"or-divider\" id=\"orDivider\">OR</div>\r\n\r\n                <div className=\"input-container\">\r\n                    <button id=\"speechRecognitionBtn\" onClick={startSpeechRecognition}>Start Speech Recognition</button>\r\n                </div>\r\n                <p id=\"firstemotionText\">{emotionLabel && `Based on the analysis you seem to be feeling: ${emotionLabel}`}</p>\r\n                {suggestionsVisible && (\r\n                    <div id=\"suggestionsSection\">\r\n                        <p id=\"emotionText\">Here are some suggestions based on your mood:</p>\r\n                        <div className=\"suggestions-container\">\r\n                            <button className=\"button\" onClick={() => handleButtonClick('Songs')}>\r\n                                <img src=\"imgs/song.png\" alt=\"Songs\" />\r\n                                <h2 className='textt'>Songs</h2>\r\n                            </button>\r\n                            <button className=\"button\" onClick={() => handleButtonClick('Books')}>\r\n                                <img src=\"imgs/book.png\" alt=\"Books\" />\r\n                                <h2 className='textt'>Books</h2>\r\n                            </button>\r\n                            <button className=\"button\" onClick={() => handleButtonClick('Podcast')}>\r\n                                <img src=\"imgs/podcast.png\" alt=\"Podcast\" />\r\n                                <h2 className='textt'>Meditation and Yoga</h2>\r\n                            </button>\r\n                            <button className=\"button\" onClick={() => handleButtonClick('Movies')}>\r\n                                <img src=\"imgs/movie.png\" alt=\"Movies\" />\r\n                                <h2 className='textt'>Movies</h2>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div id=\"recommend\">\r\n                {selectedComponent && renderSelectedComponent()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Startt;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}