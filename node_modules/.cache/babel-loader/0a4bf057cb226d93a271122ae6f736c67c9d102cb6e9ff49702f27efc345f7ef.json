{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saura\\\\Desktop\\\\Sen-React-main (1)\\\\Sen-React-main\\\\src\\\\Yoga.js\";\nimport React from 'react';\nimport YogaList from './YogaList';\nimport yogaData from './yogaData';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Yoga(props) {\n  const {\n    emotionLabel\n  } = props;\n  // Filter songs based on the emotionLabel\n  const filteredYoga = yogaData.filter(yog => yog.emotion === emotionLabel);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Feeling \", emotionLabel, \" - Here are some Yoga and Meditation\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), filteredYoga.map(yog => /*#__PURE__*/_jsxDEV(YogaList, {\n      yoga: yog.Yoga,\n      description: yog.Description,\n      video: yog.Video\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true);\n}\n_c = Yoga;\nvar _c;\n$RefreshReg$(_c, \"Yoga\");","map":{"version":3,"names":["React","YogaList","yogaData","jsxDEV","_jsxDEV","Fragment","_Fragment","Yoga","props","emotionLabel","filteredYoga","filter","yog","emotion","children","fileName","_jsxFileName","lineNumber","columnNumber","map","yoga","description","Description","video","Video","_c","$RefreshReg$"],"sources":["C:/Users/saura/Desktop/Sen-React-main (1)/Sen-React-main/src/Yoga.js"],"sourcesContent":["import React from 'react'\r\nimport YogaList from './YogaList'\r\nimport yogaData from './yogaData'\r\n\r\nexport default function Yoga(props) {\r\n    const { emotionLabel } = props;\r\n    // Filter songs based on the emotionLabel\r\n    const filteredYoga = yogaData.filter(yog => yog.emotion === emotionLabel);\r\n    return (\r\n      <>\r\n        <h2>Feeling {emotionLabel} - Here are some Yoga and Meditation</h2>\r\n        {filteredYoga.map(yog => (\r\n          <YogaList yoga={yog.Yoga} description={yog.Description} video={yog.Video} />\r\n        ))}\r\n  \r\n      </>\r\n    )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,eAAe,SAASC,IAAIA,CAACC,KAAK,EAAE;EAChC,MAAM;IAAEC;EAAa,CAAC,GAAGD,KAAK;EAC9B;EACA,MAAME,YAAY,GAAGR,QAAQ,CAACS,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,OAAO,KAAKJ,YAAY,CAAC;EACzE,oBACEL,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACEV,OAAA;MAAAU,QAAA,GAAI,UAAQ,EAACL,YAAY,EAAC,sCAAoC;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClER,YAAY,CAACS,GAAG,CAACP,GAAG,iBACnBR,OAAA,CAACH,QAAQ;MAACmB,IAAI,EAAER,GAAG,CAACL,IAAK;MAACc,WAAW,EAAET,GAAG,CAACU,WAAY;MAACC,KAAK,EAAEX,GAAG,CAACY;IAAM;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC5E,CAAC;EAAA,eAEF,CAAC;AAET;AAACO,EAAA,GAbuBlB,IAAI;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}